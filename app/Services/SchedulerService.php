<?php
 namespace App\Services; use Carbon\Carbon; class SchedulerService { public static function runSchedule($class, callable $callback) { $records = $class::query()->where("\163\x74\141\x74\x75\x73", 1)->get(); foreach ($records as $record) { $frequency_time = $record->frequency_time; $recurring = $record->recurring; $start_date_time = $record->start_date_time; $frequency_shift = $record->frequency_shift; $now = Carbon::now(); $then = Carbon::createFromTimeString($start_date_time); $secondsUsed = $then->diffInSeconds($now); $totalSecondsRequired = $frequency_time * $frequency_shift; if ($secondsUsed >= $totalSecondsRequired) { $callback(); if ($recurring == 1) { $record->start_date_time = Carbon::now()->toDateString(); $record->save(); } if ($recurring == 0) { $record->start_date_time = Carbon::now()->toDateString(); $record->status = 0; $record->save(); } } } } } ?>