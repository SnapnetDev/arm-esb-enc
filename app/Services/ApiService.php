<?php
 namespace App\Services; use App\Models\Api; class ApiService { static function getApiById($id) { return Api::query()->find($id); } static function callApi($id, $input = array()) { $api = self::getApiById($id)->toArray(); $settings = $api; $curl = curl_init(); $url = $settings["\165\162\x6c"]; eval($url); $config = array(CURLOPT_URL => $url, CURLOPT_RETURNTRANSFER => true, CURLOPT_ENCODING => '', CURLOPT_MAXREDIRS => 10, CURLOPT_TIMEOUT => 0, CURLOPT_FOLLOWLOCATION => true, CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, CURLOPT_CUSTOMREQUEST => $settings["\x6d\x65\164\x68\157\x64"]); if (!empty($settings["\x72\x65\x71\x75\x69\162\x65\x5f\x61\x70\x69\x5f\x69\144"])) { $apiId = $settings["\x72\x65\161\x75\151\x72\x65\137\141\x70\151\x5f\151\x64"]; $api = self::callApi($apiId, $input); } $toForm = function ($body) { foreach ($body as $k => $v) { $postFields[] = "{$k}\x3d{$v}"; } $postFields = implode("\46", $postFields); return $postFields; }; if (isset($settings["\143\x72\145\144\x65\x6e\x74\151\x61\154\137\x69\144"]) && !empty($settings["\143\162\145\x64\145\156\x74\x69\141\x6c\x5f\x69\144"])) { $credentialId = $settings["\x63\x72\x65\144\145\x6e\x74\151\x61\x6c\x5f\151\x64"]; $credentialObj = CredentialService::getCredentialById($credentialId); $headers = $credentialObj->headers; eval($headers); $config[CURLOPT_HTTPHEADER] = $headers; } $toJson = function () use($curl) { $response = curl_exec($curl); return json_decode($response, true); }; $toText = function () use($curl) { return curl_exec($curl); }; $json = function ($text) { return json_encode($text); }; if (isset($settings["\160\x61\x79\154\157\141\144"])) { $payload = $settings["\160\x61\x79\x6c\x6f\141\144"]; eval($payload); $config[CURLOPT_POSTFIELDS] = $payload; } curl_setopt_array($curl, $config); $response = array(); if (isset($settings["\x65\x78\x70\x72\145\163\163\x69\157\156"])) { eval($settings["\x65\x78\x70\x72\x65\x73\163\151\x6f\156"]); } curl_close($curl); return array("\162\145\x73\x70\x6f\x6e\163\x65" => $response); } static function execApi($curl) { } static function toForm($body) { foreach ($body as $k => $v) { $postFields[] = "{$k}\75{$v}"; } $postFields = implode("\46", $postFields); return $postFields; } static function toJson($body) { return json_encode($body); } static function getPassportToken($str) { $r = explode("\x42\145\141\x72\145\162", $str); return trim($r[1]); } } ?>