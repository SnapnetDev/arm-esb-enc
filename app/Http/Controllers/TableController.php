<?php
 namespace App\Http\Controllers; use App\Models\Table; use App\Services\TableService; use Illuminate\Http\Request; use Illuminate\Validation\ValidationException; class TableController extends Controller { public function index() { return $this->resource(Table::query()->get()); } public function create() { } public function store(Request $request) { try { $data = request()->validate(array("\156\141\155\145" => "\x72\145\x71\165\x69\x72\145\144", "\x61\x6c\151\141\163" => "\162\145\161\165\x69\162\x65\144", "\146\151\x65\x6c\144\x73" => "\x72\x65\161\165\x69\162\145\x64")); $new = new Table(); $new->create($data); TableService::createTableOnDb(request("\x6e\141\155\x65"), request("\x66\151\145\154\x64\x73")); return array("\155\x65\x73\x73\141\x67\x65" => "\116\145\x77\x20\x65\156\x74\x69\164\171\40\x61\144\144\x65\144\x2e", "\145\162\162\157\162" => false, "\144\141\x74\x61" => $new); } catch (ValidationException $ex) { return $this->validationErrors($ex); } } public function show($id) { $limit = 11; $skip = 0; if (request()->filled("\x6c\151\x6d\151\164")) { $limit = request("\x6c\151\155\x69\164"); } if (request()->filled("\163\153\151\x70")) { $skip = request("\x73\x6b\x69\x70"); } $data = TableService::getSchemaWithData($id, $limit, $skip); return array("\x6c\x69\163\164" => $data["\x72\145\x63\157\162\x64\x73"], "\162\x65\143\x5f\x63\x6f\165\x6e\164" => $data["\143\x6f\x75\156\164"]); } public function edit(Table $table) { } public function update(Request $request, $id) { try { $data = request()->validate(array("\156\x61\155\145" => "\162\x65\x71\x75\x69\x72\x65\x64", "\141\x6c\151\141\x73" => "\162\x65\x71\x75\x69\162\x65\x64", "\146\151\145\x6c\x64\x73" => "\162\145\161\165\151\x72\x65\144")); $fields = request("\146\x69\x65\154\x64\163"); $name = request("\x6e\141\155\x65"); if (request()->filled("\146\151\x65\154\x64\x73\137\x61\x64\x64") && request("\x66\x69\145\154\144\x73\x5f\x61\x64\x64") !== "\x6e\165\154\x6c" && !empty(request("\x66\x69\x65\x6c\144\x73\137\x61\x64\x64"))) { $fields_add = request("\x66\x69\145\x6c\144\163\x5f\141\144\x64"); $fields = request("\x66\151\145\x6c\144\163"); if (TableService::fieldExists($fields, $fields_add)) { return array("\x6d\x65\163\x73\x61\147\145" => "\x44\x75\x70\154\151\x63\x61\164\x65\x20\146\151\145\154\x64\x20\146\x6f\165\156\x64\54\x20\160\154\x65\x61\x73\x65\x20\x63\150\145\x63\153\40\x61\147\141\x69\156\41", "\x65\x72\162\x6f\162" => true, "\x65\162\162\157\162\x73" => array("\x65\x72\x72\x31" => "\x44\165\160\x6c\x69\x63\141\x74\145\x20\x66\151\145\154\144\40\146\x6f\165\x6e\x64\54\40\x70\x6c\x65\141\x73\145\40\143\150\145\x63\153\x20\141\x67\x61\151\x6e\41")); } $fields = TableService::addFields($fields, $fields_add); TableService::addTableFieldsOnDb($name, $fields_add); } if (request()->filled("\146\151\x65\x6c\144\163\x5f\x72\145\155\x6f\x76\145") && request("\146\x69\x65\154\x64\163\137\x72\145\x6d\x6f\x76\145") !== "\x6e\x75\154\x6c" && !empty(request("\146\151\145\154\x64\x73\137\162\x65\x6d\157\166\145"))) { $fields_remove = request("\146\x69\145\154\144\163\x5f\162\145\155\157\166\145"); $fields = request("\146\151\145\154\144\x73"); if (!TableService::fieldExists($fields, $fields_remove)) { return array("\x6d\x65\163\163\x61\x67\145" => "\x46\x69\145\154\144\x20\164\157\x20\x72\x65\155\157\x76\145\x2c\40\x6e\157\164\40\146\157\x75\x6e\144\x21", "\x65\x72\x72\x6f\x72" => true, "\145\162\x72\x6f\162\x73" => array("\145\x72\162\61" => "\106\x69\145\x6c\x64\40\164\157\40\x72\145\155\157\166\x65\54\x20\x6e\157\x74\x20\x66\x6f\165\156\144")); } $fields = TableService::deductFields($fields, $fields_remove); TableService::removeTableFieldsOnDb($name, $fields_remove); } $record = Table::query()->find($id); $record->update(array("\x6e\141\155\x65" => request("\156\x61\155\145"), "\141\154\x69\x61\x73" => request("\x61\x6c\151\141\163"), "\x66\x69\145\x6c\x64\x73" => $fields)); return array("\x6d\145\x73\x73\141\147\145" => "\105\x6e\164\151\x74\171\x20\x75\x70\144\141\164\145\144", "\x65\x72\162\x6f\162" => false, "\x64\141\164\x61" => TableService::decodeFields(request("\x66\151\x65\154\x64\x73"))); } catch (ValidationException $ex) { return $this->validationErrors($ex); } } public function destroy($id) { $record = Table::query()->find($id); TableService::removeTable($record->name); $record->delete(); return array("\155\x65\x73\163\x61\147\x65" => "\x45\x6e\164\x69\164\171\40\162\x65\x6d\157\x76\145\144\56", "\145\x72\x72\157\162" => false, "\144\141\164\141" => $record); } } ?>