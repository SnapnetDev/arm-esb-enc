<?php
 namespace App\Http\Controllers; use App\Models\Store; use Illuminate\Http\Request; use Illuminate\Validation\ValidationException; class StoreController extends Controller { public function index() { return $this->resource(Store::query()->get()); } public function create() { } public function store(Request $request) { try { $data = request()->validate(array("\156\x61\x6d\145" => "\162\x65\161\165\x69\162\145\x64")); $new = new Store(); $check = Store::query()->where("\156\x61\155\x65", $data["\156\141\155\145"]); if ($check->exists()) { return array("\x6d\145\163\163\x61\147\145" => "\123\x74\157\x72\145\x20\145\170\151\163\164\163\x21", "\x65\x72\x72\157\162" => true); } $new->create($data); return array("\x6d\145\x73\x73\x61\147\x65" => "\116\145\167\40\163\x74\x6f\162\x65\x20\143\162\x65\141\x74\x65\x64", "\145\x72\162\x6f\x72" => false); } catch (ValidationException $ex) { return $this->validationErrors($ex); } } public function show(Store $store) { } public function edit(Store $store) { } public function update(Request $request, $id) { try { $data = request()->validate(array("\x6e\141\155\145" => "\x72\x65\x71\165\151\x72\145\144")); $record = Store::query()->find($id); $record->update($data); return array("\x6d\145\x73\163\141\x67\x65" => "\123\x74\157\x72\145\x20\x75\x70\144\141\164\145\x64", "\145\x72\x72\157\162" => false, "\x64\141\164\141" => $record); } catch (ValidationException $ex) { return $this->validationErrors($ex); } } public function destroy($id) { $record = Store::query()->find($id); $record->delete(); return array("\x6d\x65\163\163\141\147\x65" => "\x53\164\x6f\x72\x65\x20\162\x65\155\x6f\166\x65\x64", "\x65\162\162\157\x72" => false, "\144\141\x74\x61" => $record); } } ?>