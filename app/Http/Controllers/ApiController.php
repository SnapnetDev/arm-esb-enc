<?php
 namespace App\Http\Controllers; use App\Models\Api; use App\Models\Category; use App\Services\ApiService; use App\Services\CurlService; use Illuminate\Http\Request; use Illuminate\Validation\ValidationException; class ApiController extends Controller { public function index() { if (request()->filled("\x63\141\164\x65\x67\x6f\162\x79\x5f\151\144") && request("\x63\141\164\x65\x67\157\162\x79\x5f\151\144")) { return $this->resource(Api::query()->where("\143\141\164\x65\147\x6f\x72\171\x5f\x69\x64", request("\143\141\x74\145\147\x6f\162\171\x5f\x69\x64"))->get()); } return $this->resource(Api::query()->get()); } public function create() { } public function store(Request $request) { try { $data = request()->validate(array("\156\141\x6d\145" => "\162\x65\x71\165\x69\x72\x65\144", "\143\162\x65\144\x65\x6e\164\x69\x61\x6c\x5f\151\x64" => "\162\145\161\x75\151\162\x65\144", "\x72\x65\x71\165\151\162\x65\137\x61\x70\x69\137\x69\144" => "\162\x65\x71\x75\x69\x72\x65\x64", "\165\162\x6c" => "\x72\x65\161\165\151\x72\145\144", "\x6d\x65\x74\x68\157\144" => "\162\x65\x71\165\x69\x72\145\x64", "\x70\x61\171\154\x6f\x61\144" => "\x72\x65\x71\x75\x69\162\145\x64", "\x72\145\161\x75\145\163\164" => "\162\145\x71\x75\151\x72\x65\144", "\162\145\x73\x70\x6f\x6e\x73\x65" => "\162\145\161\x75\x69\162\145\x64", "\x72\x65\163\x70\x6f\x6e\163\x65\137\164\171\x70\145" => "\x72\145\161\x75\x69\x72\x65\x64", "\165\x72\x6c\x5f\x70\162\145\x76\151\145\167" => "\x72\x65\161\x75\151\x72\x65\144", "\145\x78\x70\162\145\163\163\x69\157\x6e" => "\x72\x65\161\x75\x69\x72\x65\144")); $category_id = request("\143\x61\x74\145\x67\x6f\x72\x79\137\151\144"); if (request()->filled("\x63\x61\164\x65\x67\x6f\x72\x79\x5f\x6e\x61\x6d\x65")) { $categoryName = request("\x63\x61\164\145\147\x6f\x72\171\137\156\141\x6d\x65"); $query = Category::query()->where("\156\x61\x6d\x65", $categoryName); if (!$query->exists()) { $newCat = new Category(); $newCat = $newCat->create(array("\x6e\141\155\145" => $categoryName)); $category_id = $query->first()->id; } } $data["\x63\141\164\145\147\157\x72\171\x5f\x69\x64"] = $category_id; $new = new Api(); $new->create($data); return $this->success("\x41\160\151\40\101\144\x64\145\144\40\123\165\x63\143\x65\163\163\x66\x75\154\x6c\171"); } catch (ValidationException $ex) { return $this->validationErrors($ex); } } public function show(Api $api) { } public function edit(Api $api) { } public function update(Request $request, $id) { try { $data = request()->validate(array("\x6e\141\155\x65" => "\x72\145\x71\165\151\x72\145\144", "\x63\162\x65\x64\145\x6e\164\x69\x61\x6c\137\x69\x64" => "\x72\145\x71\165\x69\162\x65\144", "\x72\145\161\165\151\x72\145\x5f\x61\x70\x69\137\151\144" => "\x72\x65\161\165\151\162\145\144", "\x75\x72\154" => "\162\x65\x71\x75\x69\x72\145\x64", "\x6d\x65\x74\150\157\144" => "\162\x65\x71\x75\151\x72\x65\144", "\x70\141\171\x6c\x6f\x61\x64" => "\x72\x65\x71\165\x69\162\145\144", "\x72\x65\x71\165\145\x73\164" => "\162\145\x71\x75\151\162\x65\144", "\162\145\x73\x70\x6f\156\163\x65" => "\162\145\161\165\151\x72\145\144", "\162\x65\163\x70\157\x6e\163\x65\137\x74\171\160\145" => "\162\145\161\x75\151\x72\x65\x64", "\x75\162\154\137\160\x72\145\166\151\145\167" => "\x72\145\x71\x75\x69\162\x65\144", "\143\x61\x74\x65\147\157\x72\171\x5f\151\144" => "\162\145\161\165\151\162\x65\144", "\x65\170\x70\x72\145\163\163\x69\157\156" => "\x72\145\161\x75\x69\162\x65\144")); $record = Api::query()->find($id); $record->update($data); return $this->success("\x41\120\111\40\123\141\x76\x65\x64"); } catch (ValidationException $ex) { return $this->validationErrors($ex); } } public function destroy($id) { $record = Api::query()->find($id); $record->delete(); return array("\155\x65\163\163\141\x67\145" => "\x41\160\x69\40\122\x65\x6d\157\x76\x65\x64\x20\123\x75\143\x63\x65\163\163\x66\x75\154\x6c\171", "\145\x72\162\x6f\162" => false); } function runApi($id) { $r = ApiService::callApi($id, array()); $rr = array(); foreach ($r as $k => $v) { $rr[] = array("\x6b\145\x79" => $k, "\166\x61\154\165\145" => json_encode($v)); } return $rr; } } ?>